identical(as.factor(colnames(counts)), meta$sname)
res=lapply(unique(meta$cluster), function(cell_type){
col_fil=which(meta$cluster==cell_type)
counts_fil=counts[,col_fil]
meta_fil=meta[col_fil,]
cpm_dat=edgeR::cpm(counts_fil)
row_fil=which(apply(cpm_dat, 1, function(x) sum(x<1))<18)
counts_fil=counts_fil[row_fil,]
dds <- DESeq2::DESeqDataSetFromMatrix(countData = counts_fil,
colData = meta_fil,
design = ~ visit)
dds <-DESeq2::DESeq(dds)
vsd.fixed <- DESeq2::varianceStabilizingTransformation(dds, blind=F)
counts<- assay(vsd.fixed)
fit=lmerSeq::lmerSeq.fit(~visit+(1|pid),expr_mat = counts,sample_data = meta_fil)
calc_icc=function(lmerseq_obj){
vc=lme4::VarCorr(lmerseq_obj$fit)
sample_num_var=attr(vc$pid, "stddev")^2
residual_var=sigma(lmerseq_obj$fit)^2
sum_var=sample_num_var+residual_var
icc=sample_num_var/sum_var
data.frame(gene=lmerseq_obj$gene,icc=icc)
}
meta_baseline<-meta_fil%>%filter(visit=="pre")
meta_non_baseline<-meta_fil%>%filter(visit!="pre")
#Randomly shuffle ID labels
subj_ids<-sample(unique(meta_baseline$pid), size = length(unique(meta_baseline$pid)), replace=F)
#Lag labels by one
subj_ids_perm<-c(subj_ids[2:length(subj_ids)], subj_ids[1])
#Save as DF
subj_id_df<-data.frame(subj_ids_new=subj_ids_perm, row.names = subj_ids)
meta_baseline<-meta_baseline%>%
mutate(pid=subj_id_df[pid,"subj_ids_new"])
meta_perm=bind_rows( meta_non_baseline,meta_baseline)
fit_perm=lmerSeq::lmerSeq.fit(~visit+(1|pid),expr_mat = counts,sample_data = meta_perm)
df_icc=lapply(fit, function(x){
calc_icc(x)
})%>%bind_rows()%>%mutate(type="real")
df_icc_perm=lapply(fit_perm, function(x){
calc_icc(x)
})%>%bind_rows()%>%mutate(type="perm")
df_icc=rbind(df_icc, df_icc_perm)
write.csv(df_icc, paste0("mimi_data/pseudo_bulk_icc_cluster_", cell_type, ".csv"),row.names = F )
df_icc
})
list.files(".")
`%>%`=dplyr::`%>%`
get_file_info<-function(file_name){
methods=c("nbmm_adq", "nbmm_pl", "lmm", "rmrnaseq")
method=str_extract(file_name, paste(methods, collapse="|"))
sim_num=as.numeric(str_extract(file_name, "[0-9](?=.RDS)"))
timepoints=as.numeric(str_extract(file_name, "[0-9](?=x)"))
samp_size=as.numeric(str_extract(file_name, "(?<=n)(\\d+)"))
return(data.frame(method=method, timepoints=timepoints, samp_size=samp_size,sim_num=sim_num))
}
stat_extract=function(res_tab, pval_thresh, de_var="de", pval_var="p_val_adj", stat){
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
if(any(dim(two_by_two)!=2)){
stat_val=NA
}else stat_val=switch(stat,
T1E=two_by_two["TRUE", "FALSE"]/sum(two_by_two[,"FALSE"]),
FDR=two_by_two["TRUE", "FALSE"]/sum(two_by_two["TRUE",]),
power=two_by_two["TRUE", "TRUE"]/sum(two_by_two[,"TRUE"]))
}
contrast_df=function(file_name, contrasts, stat=c("power", "FDR", "T1E"), pval_thresh=c(.001, .01, .05, .1)){
my_file=readRDS(file_name)
file_info=get_file_info(file_name = file_name)
lapply(contrasts, function(contrast){
if(file_info$method=="rmrnaseq") contrast_tab=my_file$contrasts[[contrast]]
else contrast_tab=my_file$contrasts[[contrast]]$summary_table
lapply(stat, function(stat){
lapply(pval_thresh, function(thresh){
df=data.frame(contrast=contrast, stat=stat, pval_thresh=thresh,
stat_val=stat_extract(contrast_tab, thresh, stat=stat))
cbind(file_info, df)
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
}
test=lapply(list.files("."), function(x){
# print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
list.files(".")
`%>%`=dplyr::`%>%`
setwd("C:/Users/ewynn/Repositories/long_rnaseq_rnd2/model_summaries")
get_file_info<-function(file_name){
methods=c("nbmm_adq", "nbmm_pl", "lmm", "rmrnaseq")
method=str_extract(file_name, paste(methods, collapse="|"))
sim_num=as.numeric(str_extract(file_name, "[0-9](?=.RDS)"))
timepoints=as.numeric(str_extract(file_name, "[0-9](?=x)"))
samp_size=as.numeric(str_extract(file_name, "(?<=n)(\\d+)"))
return(data.frame(method=method, timepoints=timepoints, samp_size=samp_size,sim_num=sim_num))
}
stat_extract=function(res_tab, pval_thresh, de_var="de", pval_var="p_val_adj", stat){
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
if(any(dim(two_by_two)!=2)){
stat_val=NA
}else stat_val=switch(stat,
T1E=two_by_two["TRUE", "FALSE"]/sum(two_by_two[,"FALSE"]),
FDR=two_by_two["TRUE", "FALSE"]/sum(two_by_two["TRUE",]),
power=two_by_two["TRUE", "TRUE"]/sum(two_by_two[,"TRUE"]))
}
contrast_df=function(file_name, contrasts, stat=c("power", "FDR", "T1E"), pval_thresh=c(.001, .01, .05, .1)){
my_file=readRDS(file_name)
file_info=get_file_info(file_name = file_name)
lapply(contrasts, function(contrast){
if(file_info$method=="rmrnaseq") contrast_tab=my_file$contrasts[[contrast]]
else contrast_tab=my_file$contrasts[[contrast]]$summary_table
lapply(stat, function(stat){
lapply(pval_thresh, function(thresh){
df=data.frame(contrast=contrast, stat=stat, pval_thresh=thresh,
stat_val=stat_extract(contrast_tab, thresh, stat=stat))
cbind(file_info, df)
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
}
test=lapply(list.files("."), function(x){
# print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
test=test%>%group_by(method,timepoints, samp_size, contrast, stat, pval_thresh)%>%
summarise(mean_stat=mean(stat_val), .groups ="drop" )
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
pdf("../fdr_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../fdr_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../t1e_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="T1E", contrast==x),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../power_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="power", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=mean_stat, color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
View(test)
test=lapply(list.files("."), function(x){
# print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
View(test)
test=test%>%filter(sim_num==1)%>%group_by(method,timepoints, samp_size, contrast, stat, pval_thresh)%>%
summarise(mean_stat=mean(stat_val), .groups ="drop" )
pdf("../fdr_plots2.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../t1e_plots2.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="T1E", contrast==x),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../power_plots2.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="power", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=mean_stat, color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../t1e_plots2.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="T1E", contrast==x),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
View(my_file)
stat_extract=function(res_tab, pval_thresh, de_var="de", pval_var="p_val_adj", stat){
if(stat=="T1E") pval_var="p_val_raw" else pval_var="p_val_adj"
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
if(any(dim(two_by_two)!=2)){
stat_val=NA
}else stat_val=switch(stat,
T1E=two_by_two["TRUE", "FALSE"]/sum(two_by_two[,"FALSE"]),
FDR=two_by_two["TRUE", "FALSE"]/sum(two_by_two["TRUE",]),
power=two_by_two["TRUE", "TRUE"]/sum(two_by_two[,"TRUE"]))
}
contrast_df=function(file_name, contrasts, stat=c("power", "FDR", "T1E"), pval_thresh=c(.001, .01, .05, .1)){
my_file=readRDS(file_name)
file_info=get_file_info(file_name = file_name)
lapply(contrasts, function(contrast){
if(file_info$method=="rmrnaseq") contrast_tab=my_file$contrasts[[contrast]]
else contrast_tab=my_file$contrasts[[contrast]]$summary_table
lapply(stat, function(stat){
lapply(pval_thresh, function(thresh){
df=data.frame(contrast=contrast, stat=stat, pval_thresh=thresh,
stat_val=stat_extract(contrast_tab, thresh, stat=stat))
cbind(file_info, df)
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
}
test_full=lapply(list.files("."), function(x){
# print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
test=test_full%>%group_by(method,timepoints, samp_size, contrast, stat, pval_thresh)%>%
summarise(mean_stat=mean(stat_val), .groups ="drop" )
pdf("../fdr_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
stat="T1E"
if(stat=="T1E") pval_var="p_val_raw" else pval_var="p_val_adj"
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
two_by_two
stat="FDR"
if(stat=="T1E") pval_var="p_val_raw" else pval_var="p_val_adj"
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
two_by_two
View(res_tab)
stat_extract
stat_extract=function(res_tab, pval_thresh, de_var="de", stat){
pval_var="p_val_adj"
if(stat=="T1E") pval_var="p_val_raw" else pval_var="p_val_adj"
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
if(any(dim(two_by_two)!=2)){
stat_val=NA
}else stat_val=switch(stat,
T1E=two_by_two["TRUE", "FALSE"]/sum(two_by_two[,"FALSE"]),
FDR=two_by_two["TRUE", "FALSE"]/sum(two_by_two["TRUE",]),
power=two_by_two["TRUE", "TRUE"]/sum(two_by_two[,"TRUE"]))
}
contrast_df=function(file_name, contrasts, stat=c("power", "FDR", "T1E"), pval_thresh=c(.001, .01, .05, .1)){
my_file=readRDS(file_name)
file_info=get_file_info(file_name = file_name)
lapply(contrasts, function(contrast){
if(file_info$method=="rmrnaseq") contrast_tab=my_file$contrasts[[contrast]]
else contrast_tab=my_file$contrasts[[contrast]]$summary_table
lapply(stat, function(stat){
lapply(pval_thresh, function(thresh){
df=data.frame(contrast=contrast, stat=stat, pval_thresh=thresh,
stat_val=stat_extract(contrast_tab, thresh, stat=stat))
cbind(file_info, df)
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
})%>%dplyr::bind_rows()
}
test_full=lapply(list.files("."), function(x){
print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
stat_extract=function(res_tab, pval_thresh, de_var="de", stat){
pval_var="p_val_adj"
#if(stat=="T1E") pval_var="p_val_raw" else pval_var="p_val_adj"
two_by_two=table(res_tab[,pval_var]<pval_thresh, res_tab[,de_var])
if(any(dim(two_by_two)!=2)){
stat_val=NA
}else stat_val=switch(stat,
T1E=two_by_two["TRUE", "FALSE"]/sum(two_by_two[,"FALSE"]),
FDR=two_by_two["TRUE", "FALSE"]/sum(two_by_two["TRUE",]),
power=two_by_two["TRUE", "TRUE"]/sum(two_by_two[,"TRUE"]))
}
test_full=lapply(list.files("."), function(x){
print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
test_full2=lapply(list.files("."), function(x){
print(x)
contrast_df(x, paste0("c", 1:6))
})%>%dplyr::bind_rows()
View(test_full2)
View(test_full)
test=test_full%>%group_by(method,timepoints, samp_size, contrast, stat, pval_thresh)%>%
summarise(mean_stat=mean(stat_val), .groups ="drop" )
pdf("../t1e_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="T1E", contrast==x),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../fdr_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="FDR", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../t1e_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="T1E", contrast==x),
mapping=aes(x=as.factor(pval_thresh), y=log2(mean_stat/pval_thresh), color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
pdf("../power_plots.pdf")
lapply(paste0("c", 1:6), function(x){
title=switch (x,
c1="Difference between groups at final timepoint",
c2="Difference between baseline and final timepoint in treatment group",
c3="Difference between groups at any timepoint",
c4="Difference between any timepoints in the treatment group",
c5="Any significant interaction effects",
c6="Any significant coefficients"
)
ggplot(filter(test, stat=="power", contrast==x, pval_thresh>.001),
mapping=aes(x=as.factor(pval_thresh), y=mean_stat, color=method, group=method))+
geom_point()+geom_path()+facet_wrap(~samp_size)+ggtitle(title)
})
dev.off()
setwd("C:/Users/ewynn/OneDrive - The University of Colorado Denver/dissertation")
View(res)
names(res)=unique(meta$cluster)
View(res)
View(res[["CD4_Effector"]])
pdf("mimi_pseudo_bulk.pdf")
lapply(unique(meta$cluster), function(x){
ggplot(res[[x]], aes(x=type, y=icc))+geom_boxplot()+ggtitle(x)
})
dev.off()
View(nbmm_pl_n3_4x_1)
View(nbmm_pl_n3_4x_1[["contrasts"]][["c4"]][["summary_table"]])
gee.fit=obj
library(corrRNASeq)
?geeglm_small_samp
data("simdata")
sample_meta_data <- simdata$metadata
#Subset down to one observation (i.e. gene)
counts=simdata$counts[1,]
#Combine counts, metadata into dataframe
df=cbind(counts, sample_meta_data)
#Sort data by id (Function also does this if sort=T)
df=df[order(df$ids),]
#Fit the Model-use Pan method for small sample variance
fit.gee.pan<-geeglm_small_samp(formula =counts ~ group * time,
family=poisson, data=df, id=ids,
corstr="exchangeable",
small.samp.method="pan", sort=T)
fit.gee.pan$small.samp.var
summary(fit.gee.pan)
fit.gee.pan$small.samp.var
fit.gee.pan$geese$vbeta
fit.gee.pan$geese$vbeta
summary(fit.gee.pan)$coefficients
sqrt(fit.gee.pan$small.samp.var)
fit.gee<-geeglm_small_samp(formula =counts ~ group * time,
family=poisson, data=df, id=ids,
corstr="exchangeable", sort=T)
fit.gee$geese$vbeta
summary(fit.gee)$coefficients
geeglm(formula=counts~group*time, family=poisson, data=df, id=ids, corstr="exchangeable")
library(geepack)
geeglm(formula=counts~group*time, family=poisson, data=df, id=ids, corstr="exchangeable")
test=geeglm(formula=counts~group*time, family=poisson, data=df, id=ids, corstr="exchangeable")
summary(test)$coefficients
summary(fit.gee)$coefficients
identical(summary(fit.gee)$coefficients, summary(test)$coefficients)
summary(fit.gee.pan$coefficients
)
summary(fit.gee.pan)$coefficients
library(corrRNASeq)
library(corrRNASeq)
library(corrRNASeq)
methods=c(#"DESeq2","DESeq2_star","edgeR", "edgeR_star","gee", "limma",  "lmm", "nbmm_adq",
"nbmm_ml", "nbmm_pl","rmrnaseq", "nbmm_adq_lrt")
contrasts=list(
## Differences in groups at any timepoints
c1=rbind(c(0, 1, 0, 0, 0, 0), #Difference in groups at time1
c(0, 1, 0, 0, 1, 0), #Difference in groups at time2
c(0, 1, 0, 0, 0, 1)), #Difference in groups at time3
## Difference between any timepoints in SS group
c2=rbind(c(0, 0, 1, 0, 1, 0), #Difference btwn time1 and time2
c(0, 0, 0, 1, 0, 1)#, #Difference in time1 and tim3
#c(0, 0, -1, 1, -1, 1) #Difference in time2 and time3 (don't need, comb of other two)
),
## Difference between any timepoints in CS group
c3=rbind(c(0, 0, 1, 0, 0, 0), #Difference btwn time1 and time2
c(0, 0, 0, 1, 0, 0)#, #Difference in time1 and time3
#c(0, 0, -1, 1, -1, 1) #Difference in time2 and time3 (don't need, comb of other two)
),
## Any Significant Interaction
c4=rbind(c(0, 0, 0, 0, 1, 0), #Difference btwn time1 and time2
c(0, 0, 0, 0, 0, 1) #Difference in time1 and time3
)
)
## Read in data
counts<-read.csv("app_data/raw_counts.csv", row.names = 1)
