devtools::document()
library(corrRNASeq)
?corrSeq.summary
?corrSeq_fit
?corrSeq.summary
devtools::document()
devtools::document()
library(corrRNASeq)
?corrSeq_fit
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit GEE models using Wang-Long small sample size estimator
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Fit NBMM-ML models
## Random effects must be factors
sample_meta_data$ids<-factor(sample_meta_data$ids)
nbmm_ml_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_ml")
## Fit LMM models to transformed data
## Read in expression data from lmerSeq package
data("expr_data")
## Transformed data (VST transformation from \code{DESeq2})
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data
##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]
##  Fit the Models
lmm_fit<- corrSeq_fit(formula = ~ group * time + (1|ids),
expr_mat = vst_expr,
sample_data = sample_meta_data,
method="lmm")
devtools::document()
library(corrRNASeq)
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit GEE models using Wang-Long small sample size estimator
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Fit NBMM-ML models
## Random effects must be factors
sample_meta_data$ids<-factor(sample_meta_data$ids)
nbmm_ml_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_ml")
## Fit LMM models to transformed data
## Read in expression data from lmerSeq package
data("expr_data")
## Transformed data (VST transformation from \code{DESeq2})
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data
##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]
##  Fit the Models
lmm_fit<- corrSeq_fit(formula = ~ group * time + (1|ids),
expr_mat = vst_expr,
sample_data = sample_meta_data,
method="lmm")
View(lmm_fit)
View(nbmm_pl_fit)
devtools::document()
library(corrRNASeq)
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit GEE models using Wang-Long small sample size estimator
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Fit NBMM-ML models
## Random effects must be factors
sample_meta_data$ids<-factor(sample_meta_data$ids)
nbmm_ml_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_ml")
## Fit LMM models to transformed data
## Read in expression data from lmerSeq package
data("expr_data")
## Transformed data (VST transformation from \code{DESeq2})
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data
##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]
##  Fit the Models
lmm_fit<- corrSeq_fit(formula = ~ group * time + (1|ids),
expr_mat = vst_expr,
sample_data = sample_meta_data,
method="lmm")
devtools::document()
library(corrRNASeq)
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit GEE models using Wang-Long small sample size estimator
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Fit NBMM-ML models
## Random effects must be factors
sample_meta_data$ids<-factor(sample_meta_data$ids)
nbmm_ml_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_ml")
## Fit LMM models to transformed data
## Read in expression data from lmerSeq package
data("expr_data")
## Transformed data (VST transformation from \code{DESeq2})
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data
##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]
##  Fit the Models
lmm_fit<- corrSeq_fit(formula = ~ group * time + (1|ids),
expr_mat = vst_expr,
sample_data = sample_meta_data,
method="lmm")
View(gee_fit)
View(lmm_fit)
View(nbmm_ml_fit)
View(nbmm_pl_fit)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq.summary(corrSeq_results = fit.lmerSeq,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq.summary(corrSeq_results = fit.lmerSeq,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
?corrSeq_summary
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = fit.lmerSeq,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
counts=simdata$counts[1:10,]
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
weights
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
devtools::document()
library(corrRNASeq)
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
View(model_sum)
View(model_sum[["summary_table"]])
devtools::document()
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
View(nbmm_pl_fit)
View(model_sum)
View(model_sum[["summary_table"]])
data("simdata")
sample_meta_data <- simdata$metadata
#Subset down to one observation (i.e. gene)
counts=simdata$counts[1,]
#Combine counts, metadata into dataframe
df=cbind(counts, sample_meta_data)
#Sort data by id (Function also does this if sort=T)
df=df[order(df$ids),]
#Fit the Model-use Pan method for small sample variance
fit.gee.pan<-geeglm_small_samp(formula =counts ~ group * time,
family=poisson, data=df, id=ids,
corstr="exchangeable",
small.samp.method="pan", sort=T)
View(fit.gee.pan)
data("simdata")
sample_meta_data <- simdata$metadata
#Subset down to one observation (i.e. gene)
counts=simdata$counts[1,]
#Combine counts, metadata into dataframe
df=cbind(counts, sample_meta_data)
#Fit the Model
fit.glmm.nb <- glmm_nb_lmer(formula =counts ~ group * time + (1|ids),
data=df, REML = T)
View(nbmm_pl_fit)
View(fit.glmm.nb)
class(fit.glmm.nb)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
library(corrRNASeq)
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
View(model_sum)
library(lmerTest)
?lmer
?`lmerMod-class`
?`lmerModLmerTest-class`
View(model_sum[["summary_table"]])
?lm
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = 2,
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
View(model_sum)
View(model_sum[["summary_table"]])
View(model_sum[["summary_table"]])
?lmer
?summary.lmerModLmerTest
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit GEE models using Wang-Long small sample size estimator
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Fit NBMM-ML models
## Random effects must be factors
sample_meta_data$ids<-factor(sample_meta_data$ids)
nbmm_ml_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_ml")
## Fit LMM models to transformed data
## Read in expression data from lmerSeq package
data("expr_data")
## Transformed data (VST transformation from \code{DESeq2})
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data
##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]
##  Fit the Models
lmm_fit<- corrSeq_fit(formula = ~ group * time + (1|ids),
expr_mat = vst_expr,
sample_data = sample_meta_data,
method="lmm")
View(lmm_fit)
View(gee_fit)
View(nbmm_ml_fit)
View(nbmm_pl_fit)
?p.adjust.methods
data("simdata")
sample_meta_data <- simdata$metadata
## Subset down to 10 observation (i.e. gene)
counts=simdata$counts[1:10,]
## Fit NBMM-PL models
nbmm_pl_fit <- corrSeq_fit(formula = ~ group * time+(1|ids),
expr_mat = counts,
sample_data = sample_meta_data,
method="nbmm_pl")
## Summarize the group coefficient with Satterthwaite degrees of freedom
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
nbmm_pl_fit[[1]]<-NULL
model_sum <-corrSeq_summary(corrSeq_results = nbmm_pl_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
View(model_sum)
View(model_sum[["summary_table"]])
gee_fit <- corrSeq_fit(formula = ~ group * time,
expr_mat = counts,
sample_data = sample_meta_data,
method="gee",
id=ids,
small.samp.method="wl")
model_sum <-corrSeq_summary(corrSeq_results = gee_fit,
coefficient = "group",
p_adj_method = 'BH',
ddf = 'Satterthwaite',
sort_results = T)
data("simdata")
sample_meta_data <- simdata$metadata
#Subset down to one observation (i.e. gene)
counts=simdata$counts[1,]
#Combine counts, metadata into dataframe
df=cbind(counts, sample_meta_data)
#Sort data by id (Function also does this if sort=T)
df=df[order(df$ids),]
#Fit the Model-use Pan method for small sample variance
fit.gee.pan<-geeglm_small_samp(formula =counts ~ group * time,
family=poisson, data=df, id=ids,
corstr="exchangeable",
small.samp.method="pan", sort=T)
View(fit.gee.pan)
library(NBZIMM)
?glmm_nb_lmer
?glmm.nb
data("simdata")
sample_meta_data <- simdata$metadata
#Subset down to one observation (i.e. gene)
counts=simdata$counts[1,]
#Combine counts, metadata into dataframe
df=cbind(counts, sample_meta_data)
#Fit the Model
fit.glmm.nb <- glmm_nb_lmer(formula =counts ~ group * time + (1|ids),
data=df, REML = T)
View(fit.glmm.nb)
class(fit.glmm.nb)
library(lmerSeq)
devtools::document()
library(corrRNASeq)
